#############################################################################
#    This file is part of Zeynep.                                           #
#                                                                           #
#    Copyright (C) 2015-2017  Atilla ÖNTAŞ <tarakbumba at gmail dot com>     #
#                                                                           #
#    Zeynep is free software: you can redistribute it and/or modify         #
#    it under the terms of the GNU General Public License as published by   #
#    the Free Software Foundation, either version 2 of the License, or      #
#    (at your option) any later version.                                    #
#                                                                           #
#    Zeynep is distributed in the hope that it will be useful,              #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of         #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          #
#    GNU General Public License for more details.                           #
#                                                                           #
#    You should have received a copy of the GNU General Public License      #
#    along with Zeynep.  If not, see <http://www.gnu.org/licenses/>.        #
#                                                                           #
#############################################################################


# Configuration file for zeynep
#
#############################################################
#
#
# If you want to use options below, please uncomment that option and give appropriate argument.
#
# Type which URL should be used with urpmi.addmedia --distrib
# Type the URL as /someurl/mageia/distrib
# Do not add Mageia Version and arch paths to this URL
# Zeynep will use this as /someurl/mageia/distrib/$mga-version/$arch
# This URL may  your local directories as well which contains directories
# for i586 or x86_64 or both and media.cfg file along with media_info directory
# E.g. /home/user/rpms
# See: https://wiki.mageia.org/en/Mirrors_policy for detailed information.
# With this option enabled you don't need to use "-d" option with zeynep
#
#user_distrib_url=""

# Type which URL of a media source should be used with urpmi.addmedia
# Notice that this is different from urpmi.addmedia --distrib command
# explained above. This URL may  your local directories as well.
# E.g. /home/user/rpms
# Type exact path of URL which holds rpm packages and media_info directory
# You can type this as e.g. /someurl/mageia/$mga-version/$arch if
# URL path includes both a mageia version and arch paths.
# With this option enabled you don't need to use "-d" option with zeynep
#
#user_media_url=""

# Medias which will not be ignored in a comma seperated list (useful for Nonfree and Tainted builds):
# With this option enabled you don't need to use "-n" option with zeynep
#
#user_no_ignore_media="Nonfree Release,Nonfree Updates,Nonfree Backports,Tainted Release,Tainted Updates,Tainted Backports"

# Path for compiled rpm packages to be uploaded/copied:
# You can use Mageia version and architecture for directories of
# both i586 and x86_64 archs. Be sure that you use $arch variable
# With this option enabled you don't need to use "-u" option with zeynep
# 
# E.g. somedir/$mga_version/$arch ( Translated as somedir/cauldron/i586 in the script, depending of your choice)
#
#user_upload_directory=""

# Path for re-created srpm packages to be uploaded/copied
# You can use Mageia version $mgaversion variable for this
# 
# E.g. some_dir/$mga_version/SRPMS ( Translated as somedir/cauldron/SRPMS in the script, depending of your choice)
#
#user_srpms_upload_directory=""

# To save bandwith and time, you can specify a directory of previously downloaded rpms
# This directory will be used as urpmi cache.
# You can use Mageia version and architecture for directories of
# both i586 and x86_64 archs. Be sure that you use $arch variable
# With this option enabled you don't need to use "-c" option with zeynep
# 
# E.g. some_cache_dir/$mga_version/$arch ( Translated as somedir/cauldron/i586 in the script, depending of your choice)
#
#use_rpm_cache="1" # Yes, i want to use rpm cache
#user_cache_directory=""

# Type here path of your chroot-tarballs (for creating or using)
# With this option enabled you don't need to use "-t" option with zeynep
#
#user_tarball_directory=""

# Do you want to delete old rpms in your rpm cache directory?
# Type here 1 for YES otherwise leave commented.
# With this option enabled you don't need to use "-C" option with zeynep
#
#user_tidy_rpm_cache="1" #yes

# Do you want to delete old rpms in your rpm upload directory?
# Type here 1 for YES otherwise leave commented.
# With this option enabled you don't need to use "-T" option with zeynep
#
#user_tidy_uploaded_rpms="1" #yes

# You can tell zeynep that you only want to compile packages for specified architectures below.
# Valid options are: x86_64, i586 or both
# The option "both" will compile package for both 64bit and 32bit architectures
# Note that you *must* have a x86_64 system to use this "both" or "x86_64" option.
# With this option enabled you don't need to use "-a" option with zeynep
#
#user_arch="  "

# Do you want to sign your compiled rpms?
# Type here 1 for YES otherwise leave commented.
# With this option enabled you don't need to use "-S" option with zeynep
#
#use_rpm_sign="1"

# Do you want to generate hdlists in your rpm upload directory? Useful 
# for adding this directory as urpmi media.
# Type here 1 for YES otherwise leave commented.
# With this option enabled you don't need to use "-G" option with zeynep
# 
#user_generate_hdlists="1"

# Do you want to use your SRPM directory as rpm upload directory?
# Notice that this option causes that rpms uploaded in ../RPMS/$arch
# With this option enabled you don't need to use "-l" option with zeynep
# Type here 1 for YES otherwise leave commented.
#
#user_local_build="1"

# Do you want to include your ~/.rpmmacros file in your chroot?
# Type here 1 for YES otherwise leave commented.
#
#use_rpm_macros="1"

# After a failed or succesful build; zeynep removes chroot directory
# which is in /tmp directory by default. If you want zeynep to don't  remove
# chroot directory then type here 1 for YES otherwise leave commented.
# This option is useful for investigating problems in RPM_BUILD_ROOT
# which is in /tmp/zeynep-builder-XX/chroot/home/$USER/rpmbuild directory by default.
# With this option enabled you don't need to use "-N" option with zeynep
#
# user_no_clean_build_dir="1"

# You can set your temporary directory which chroot environment will be
# created in. If this option is not set here or commandline zeynep will
# create chroot environment in your $TMPDIR (usually /tmp directory)
# With this option enabled you don't need to use "-D" option with zeynep
#
#user_tempdir=""



# Additional functions to use in zeynep:
#
# Uncomment below "prebuild_stuff" variable to source your functions
# which should be used *JUST BEFORE* package building. This does not
# interfere with setting up chroot environment and other stuff.
# It runs user defined functions just before executing creating rpm packages.
# 
# You can define commands as many as you wish. But you should include all
# of them in a main "prebuild_functions" function. Zeynep only reads and
# sources that. Be sure that your multiple functions set before
# prebuild_functions function. Bash only sources other functions in a function
# if they are above the main one.

#prebuild_stuff="1"
#prebuild_functions () {

#}

#
# Uncomment below "postbuild_stuff" variable to source your functions
# which should be used *JUST AFTER* package building. This does not
# interfere with setting up chroot environment and other stuff.
# It runs user defined functions just after executing package building.
# 
# You can define commands as many as you wish. But you should include all
# of them in a main "postbuild_functions" function. Only exception to this
# is if a function runs a function before. Then you should not include it in
# our "postbuild_functions" function. Zeynep only reads and sources that.
# Be sure that your multiple functions set before prebuild_functions function.
# Bash only sources other functions in a function
# if they are above the main one.

#postbuild_stuff="1"

#postbuild_functions () {

#}


